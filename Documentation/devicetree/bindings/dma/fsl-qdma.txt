* Freescale queue Direct Memory Access Controller(qDMA) Controller

  The qDMA controller transfers blocks of data between one source and one or more
destinations. The blocks of data transferred can be represented in memory as contiguous
or non-contiguous using scatter/gather table(s). Channel virtualization is supported
through enqueuing of DMA jobs to, or dequeuing DMA jobs from, different work
queues.
  Legacy mode is primarily included for software requiring the earlier
QorIQ DMA programming model. This mode provides a simple programming
model not utilizing the datapath architecture. In legacy mode, DMA
operations are directly configured through a set of architectural
registers per channel.

* qDMA Controller
Required properties:
- compatible :
	- "fsl,ls-qdma" for qDMA used similar to that on LS SoC
- reg : Specifies base physical address(s) and size of the qDMA registers.
	The region is qDMA control register's address and size.
- interrupts : A list of interrupt-specifiers, one for each entry in
	interrupt-names.
- interrupt-names : Should contain:
	"qdma-tx" - the  interrupt
	"qdma-err" - the error interrupt
- channels : Number of channels supported by the controller

Optional properties:
- big-endian: If present registers and hardware scatter/gather descriptors
	of the qDMA are implemented in big endian mode, otherwise in little
	mode.


Examples:

	qdma: qdma@8390000 {
		compatible = "fsl,ls-qdma";
		reg = <0x0 0x8380000 0x0 0x20000>;
		interrupts = <GIC_SPI 170 IRQ_TYPE_LEVEL_HIGH>,
				<GIC_SPI 185 IRQ_TYPE_LEVEL_HIGH>;
		interrupt-names = "qdma-tx", "qdma-err";
		channels = <1>;
	};
