/*
 * Device Tree file for Freescale LS2085a QDS Board
 *
 * Copyright (C) 2015, Freescale Semiconductor
 *
 * Bhupesh Sharma <bhupesh.sharma@freescale.com>
 *
 * This file is licensed under the terms of the GNU General Public
 * License version 2.  This program is licensed "as is" without any
 * warranty of any kind, whether express or implied.
 */

/dts-v1/;

/include/ "fsl-ls2085a.dtsi"

/ {
	model = "Freescale Layerscape 2085a QDS Board";
	compatible = "fsl,ls2085a-qds", "fsl,ls2085a";
};

&esdhc {
	status = "okay";
};

&ifc {
	status = "okay";
	#address-cells = <2>;
	#size-cells = <1>;
	ranges = <0x0 0x0 0x5 0x80000000 0x08000000
		  0x3 0x0 0x5 0x20000000 0x00010000>;

	nor@0,0 {
	     #address-cells = <1>;
	     #size-cells = <1>;
	     compatible = "cfi-flash";
	     reg = <0x0 0x0 0x8000000>;
	     bank-width = <2>;
	     device-width = <1>;
	};

	cpld@3,0 {
	     reg = <0x3 0x0 0x10000>;
	     compatible = "fsl,ls2085a-qds-qixis", "fsl,fpga-qixis";
	};
};

&ftm0 {
	status = "okay";
};

&i2c0 {
	status = "okay";
	pca9547@77 {
		compatible = "nxp,pca9547";
		reg = <0x77>;
		#address-cells = <1>;
		#size-cells = <0>;
		i2c@0 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0x00>;
			rtc@68 {
				compatible = "dallas,ds3232";
				reg = <0x68>;
			};
		};

		i2c@2 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0x02>;

			ina220@40 {
				compatible = "ti,ina220";
				reg = <0x40>;
				shunt-resistor = <500>;
			};
			ina220@41 {
				compatible = "ti,ina220";
				reg = <0x41>;
				shunt-resistor = <1000>;
			};
		};

		i2c@3 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0x3>;

			adt7481@4c {
				compatible = "adi,adt7461";
				reg = <0x4c>;
			};
		};
	};
};

&i2c1 {
	status = "okay";
};

&i2c2 {
	status = "okay";
};

&i2c3 {
	status = "okay";
};

&dspi {
	status = "okay";
	dflash0: n25q128a {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "st,m25p80";
		spi-max-frequency = <3000000>;
		reg = <0>;
	};
	dflash1: sst25wf040b {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "st,m25p80";
		spi-max-frequency = <3000000>;
		reg = <1>;
	};
	dflash2: en25s64 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "st,m25p80";
		spi-max-frequency = <3000000>;
		reg = <2>;
	};
};

&qspi {
	status = "okay";
	qflash0: s25fl008k {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "st,m25p80";
		spi-max-frequency = <20000000>;
		reg = <0>;
	};
};

&sata0 {
	status = "okay";
};

&sata1 {
	status = "okay";
};

&usb0 {
	status = "okay";
};

&usb1 {
	status = "okay";
};

&ifc {
	boardctrl: board-control@3,0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "fsl,tetra-fpga", "fsl,fpga-qixis", "simple-bus";
		reg = <3 0 0x300>;		/* TODO check address */
		ranges = <0 3 0 0x300>;

		mdio_mux_emi1 {
			compatible = "mdio-mux-mmioreg", "mdio-mux";
			mdio-parent-bus = <&emdio1>;
			reg = <0x54 1>;		/* BRDCFG4 */
			mux-mask = <0xe0>;	/* EMI1_MDIO */

			#address-cells=<1>;
			#size-cells = <0>;

			/* Child MDIO buses, one for each riser card:
			   reg = 0x0, 0x20, 0x40, 0x60, 0x80, 0xa0.

			   VSC8234 PHYs on the riser cards.
			 */

			/* Dirty HACK: making the phy _name_ unique, rather than
			   relying on the uniqueness of the (dtc-generated) phandle
			 */
			mdio_mux0: mdio@0 {
				reg = <0x0>;
				#address-cells = <1>;
				#size-cells = <0>;

				mdio0_phy0: mdio_phy0@1c {
					reg = <0x1c>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy1: mdio_phy1@1d {
					reg = <0x1d>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy2: mdio_phy2@1e {
					reg = <0x1e>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy3: mdio_phy3@1f {
					reg = <0x1f>;
					phy-connection-type = "sgmii";
				};
			};
			mdio_mux1: mdio@20 {
				reg = <0x20>;
				#address-cells = <1>;
				#size-cells = <0>;

				mdio0_phy4: mdio_phy0@1c {
					reg = <0x1c>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy5: mdio_phy1@1d {
					reg = <0x1d>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy6: mdio_phy2@1e {
					reg = <0x1e>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy7: mdio_phy3@1f {
					reg = <0x1f>;
					phy-connection-type = "sgmii";
				};
			};
			mdio_mux2: mdio@40 {
				reg = <0x40>;
				#address-cells = <1>;
				#size-cells = <0>;

				mdio0_phy8: mdio_phy0@1c {
					reg = <0x1c>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy9: mdio_phy1@1d {
					reg = <0x1d>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy10: mdio_phy2@1e {
					reg = <0x1e>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy11: mdio_phy3@1f {
					reg = <0x1f>;
					phy-connection-type = "sgmii";
				};
			};
			mdio_mux3: mdio@60 {
				reg = <0x60>;
				#address-cells = <1>;
				#size-cells = <0>;

				mdio0_phy12: mdio_phy0@1c {
					reg = <0x1c>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy13: mdio_phy1@1d {
					reg = <0x1d>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy14: mdio_phy2@1e {
					reg = <0x1e>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy15: mdio_phy3@1f {
					reg = <0x1f>;
					phy-connection-type = "sgmii";
				};
			};
			mdio_mux4: mdio@80 {
				reg = <0x80>;
				#address-cells = <1>;
				#size-cells = <0>;

				mdio0_phy16: mdio_phy0@1c {
					reg = <0x1c>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy17: mdio_phy1@1d {
					reg = <0x1d>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy18: mdio_phy2@1e {
					reg = <0x1e>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy19: mdio_phy3@1f {
					reg = <0x1f>;
					phy-connection-type = "sgmii";
				};
			};
			mdio_mux5: mdio@a0 {
				reg = <0xa0>;
				#address-cells = <1>;
				#size-cells = <0>;

				mdio0_phy20: mdio_phy0@1c {
					reg = <0x1c>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy21: mdio_phy1@1d {
					reg = <0x1d>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy22: mdio_phy2@1e {
					reg = <0x1e>;
					phy-connection-type = "sgmii";
				};
				mdio0_phy23: mdio_phy3@1f {
					reg = <0x1f>;
					phy-connection-type = "sgmii";
				};
			};
		};
	};
};
